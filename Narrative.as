package {	import flash.display.MovieClip;	import flash.net.URLRequest;	import flash.media.*;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.KeyboardEvent;	import flash.ui.Keyboard;	import flash.display.Loader;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.utils.*;	import fl.transitions.easing.*;	import fl.transitions.Blinds;	import fl.transitions.TransitionManager;	import fl.transitions.Transition;	import fl.transitions.Tween;	import fl.transitions.TweenEvent;	import flash.text.TextFieldAutoSize;		public class Narrative extends MovieClip 	{		private var counter:Number;		private var dialogueSound:Array;		private var dialoguesArray:Array;		private var syllabusArray:Array;		public var movieFinished:Boolean;		private var soundFinished:Boolean;		private var soundChannel_1:SoundChannel;		private var soundChannel_2:SoundChannel;				// this variable will be used to store the images		private var imageLoader:Array;		// this variable will be used to store the audio associated with the images		private var soundFiles:Array;		private var soundFiles_telegu:Array;				// this is the button to repeat the animation for a syllabus word		private var repeat:MovieClip;				// this is the button to move to the next word		private var nextWord:MovieClip;				// this stores the text to be displayed on the button		private var buttonText1:TextField;		private var buttonText2:TextField;		private var buttonText1_telegu:TextField;		private var buttonText2_telegu:TextField;		private var textStyling:TextFormat;		private var textStyling_telegu_1:TextFormat;		private var teleguTextBox:Array;		private var textBoxCounter:int;		private var teleguTextStyling:TextFormat;		private var teleguTween:Tween;		var mainTextBox:TextField;		private var horizontalBar:ImageToMovie;				// this variable will keep a track of the image being displayed		private var imageTracker:int				// used to store the return value of setInterval		// setInterval will be used to put a delay of 1 sec		// the delay is used for the gap between displaying image of a word		// the L2 word spoken		private var delay:uint;		var myTransitionManager:TransitionManager;		private var syllabusTween:Tween;		private var imageNumber_1:int;				private var motherBubbleTween:Tween;		private var sonBubbleTween:Tween;				private var motherBubbleTween2:Tween;		private var sonBubbleTween2:Tween;				private var channel_bubble:SoundChannel;		private var myTeleguFontContainer:fontContainer;		private var fileCopyNarrativeBackground:MovieClip;		private var dialogueTextField_mother:TextField;		private var dialogueTextField_raju:TextField;		private var dialogueStyling:TextFormat;				//added for mode 2		private var errorTextField:TextField;				private var speakNow:Sound;		private var speakNow_soundChannel:SoundChannel;				private var compareString:String;		private var imageFilenames:Array;		private var correct:MovieClip;		private var time:Date;		private var microphoneImageLoader:Loader;		private var repeatFlag:Boolean;				public var noOfAttempts:int;		public var maxNoOfAttempts:int;		public function Narrative(dialogues:Array, syllabus:Array,background_movieClip:MovieClip)		{			try			{				correct = new Correct();				correct.visible = false;				dialogueSound = new Array(dialogues.length);				syllabusArray = new Array(syllabus.length);								// added for mode 2;				speakNow = new Sound(new URLRequest("Audio/speakNow_telegu.mp3"));				speakNow_soundChannel = new SoundChannel();				compareString = new String();						imageFilenames = new Array();				errorTextField = new TextField();				addChild(errorTextField);				errorTextField.visible = false;				errorTextField.x = 400;				errorTextField.y = 200;				errorTextField.width = 1000;												fileCopyNarrativeBackground = background_movieClip;				channel_bubble = new SoundChannel();				motherBubbleTween = new Tween(FarmGame.mother_bubble,"alpha",Regular.easeIn,0,1,0.5,true);				motherBubbleTween.stop();				sonBubbleTween = new Tween(FarmGame.son_bubble,"alpha",Regular.easeIn,0,1,0.5,true);				sonBubbleTween.stop();				motherBubbleTween2 = new Tween(FarmGame.mother_bubble,"alpha",Regular.easeIn,1,0,0.5,true);				motherBubbleTween2.stop();				sonBubbleTween2 = new Tween(FarmGame.son_bubble,"alpha",Regular.easeIn,1,0,0.5,true);				sonBubbleTween2.stop();				setupTheButtons();				setupTeleguTextBoxes();				addEventListener(Event.ADDED_TO_STAGE,startKeyboardListener);				dialoguesArray = dialogues;				syllabusArray = syllabus;				movieFinished = false;				counter = 0;				imageTracker =0;				maxNoOfAttempts = 3;				noOfAttempts = maxNoOfAttempts;				soundFinished = true;				soundChannel_1 = new SoundChannel();				soundChannel_2 = new SoundChannel();				loadDialogues();								// initiliazing the size of this array to 5				imageLoader = new Array();				soundFiles = new Array();				soundFiles_telegu = new Array();				loadImages(FarmGame.syllabus);								//added for mode 2;				setupMicrophoneImage();				repeatFlag = false;				addChild(correct);			}						catch(e:Error)			{				errorTextField.text = "an error occured _123" + e.message;			}		}				private function setupMicrophoneImage():void		{			microphoneImageLoader = new Loader();			microphoneImageLoader.load(new URLRequest("Images/rajuMike.png"));			addChild(microphoneImageLoader);			microphoneImageLoader.visible = false;			microphoneImageLoader.x = 0;			microphoneImageLoader.y = 290;					}		private function setupDialogueTextFields():void		{			dialogueStyling = new TextFormat();			dialogueTextField_mother = new TextField();			dialogueTextField_raju = new TextField();			FarmGame.mother_bubble.addChild(dialogueTextField_mother);			FarmGame.son_bubble.addChild(dialogueTextField_raju);						dialogueTextField_mother.wordWrap = true;			dialogueTextField_raju.wordWrap = true;			//dialogueTextField_mother.multiline = true;			//dialogueTextField_raju.multiline = true;						//dialogueTextField_mother.autoSize = TextFieldAutoSize.LEFT;			dialogueTextField_raju.autoSize = TextFieldAutoSize.LEFT;			dialogueTextField_mother.width = 230;			dialogueTextField_raju.width = 200;						dialogueTextField_mother.x = -30;			dialogueTextField_mother.y = -10;						dialogueTextField_raju.y = -10;			dialogueStyling.font = "Gautami";			dialogueStyling.size = 20;			dialogueStyling.bold = true;			dialogueTextField_mother.setTextFormat(dialogueStyling);			dialogueTextField_raju.setTextFormat(dialogueStyling);					}		private function setupTeleguTextBoxes():void		{			setupDialogueTextFields();			myTeleguFontContainer = new fontContainer();			addChild(myTeleguFontContainer);			myTeleguFontContainer.visible = false;						myTeleguFontContainer.x = 85;			myTeleguFontContainer.y = 90;									mainTextBox = new TextField();			//mainTextBox.width = 300;			mainTextBox.autoSize = TextFieldAutoSize.CENTER;						teleguTextBox = new Array();			teleguTextStyling = new TextFormat();			teleguTextStyling.color = 0x000000;			teleguTextStyling.size = 40;			teleguTextStyling.bold = true;			//teleguTextStyling.font = "BRH Telugu";			teleguTextStyling.font = "Gautami";			mainTextBox.setTextFormat(teleguTextStyling);			myTeleguFontContainer.addChild(mainTextBox);						for(textBoxCounter=0;textBoxCounter<5;textBoxCounter = textBoxCounter+1)			{				teleguTextBox.push(new String());							}														}		private function setTeleguTextContent(teleguText_1:String):void		{			teleguTextBox.text = teleguText_1;		}				private function startKeyboardListener(e:Event):void		{			stage.addEventListener(KeyboardEvent.KEY_DOWN, myKeyboardListener);			removeEventListener(Event.ADDED_TO_STAGE,startKeyboardListener);		}				// This function displays a particular image from the array of the images		// stored in imageLoader at index imageNumber		// also displays name of the image in L1		// and plays the sound in L2 after a delay of 1 sec		private function showTheImage(imageNumber:int)		{			soundFinished = false;			if (imageNumber != 0)			{				imageLoader[imageNumber -1 ].visible = false;							}			imageNumber_1 = imageNumber;			imageLoader[imageNumber].showImage();			myTeleguFontContainer.visible = true;			fileCopyNarrativeBackground.alpha = 0.5;			//stage.background			mainTextBox.text = teleguTextBox[imageNumber];			mainTextBox.setTextFormat(teleguTextStyling);			syllabusTween = new Tween(imageLoader[imageNumber],"alpha",Regular.easeIn,0,1,0.5,true);			teleguTween = new Tween(myTeleguFontContainer,"alpha",Regular.easeIn,0,0,0.5,true);			syllabusTween.start();			syllabusTween.addEventListener(TweenEvent.MOTION_FINISH,playTheSound);								}				private function makeDisappearCurrentImageForPreviousImage(index:int)		{			soundFinished = false;			var disappearTween:Tween;			disappearTween = new Tween(imageLoader[index],"alpha",Regular.easeIn,1,0,0.5,true);			disappearTween.start();			disappearTween.addEventListener(TweenEvent.MOTION_FINISH,showPreviousImage);		}				private function makeImageDisappear(index:int)		{			soundFinished = false;			correct.visible = false;			var disappearTween:Tween;			disappearTween = new Tween(imageLoader[index],"alpha",Regular.easeIn,1,0,0.5,true);			disappearTween.start();			//textField_telegu[index].visible = false;			myTeleguFontContainer.visible = false;			disappearTween.addEventListener(TweenEvent.MOTION_FINISH,imageDisappearFinished);		}				// This function plays the sound stored in the variable soundFiles at		// the index soundNumber		private function playTheSound(e:Event):void		{						if (noOfAttempts>0)			{				soundFinished = false;								soundChannel_2 = soundFiles_telegu[imageNumber_1].play();				soundChannel_2.addEventListener(Event.SOUND_COMPLETE, playTeleguSoundFile);			}						else			{				soundFinished = true;				noOfAttempts = maxNoOfAttempts;			}													}				private function playTeleguSoundFile(e:Event):void		{			soundChannel_1 = soundFiles[imageNumber_1].play();				//soundChannel_1.addEventListener(Event.SOUND_COMPLETE, soundIsComplete);				soundChannel_1.addEventListener(Event.SOUND_COMPLETE, soundIsComplete);		}		private function soundIsComplete(e:Event):void		{						//soundFinished = true;			//repeatFlag = true;			speakNow_soundChannel = speakNow.play();			speakNow_soundChannel.addEventListener(Event.SOUND_COMPLETE,startTheRecognizer);		}				private function startTheRecognizer(e:Event):void		{			repeatFlag = true;			microphoneImageLoader.visible = true;			FarmGame.sock.addEventListener(SockConnection.DATA_CHANGED, checkAnswer);		}				public function checkAnswer(event:Event):void 		{			repeatFlag = false;			FarmGame.sock.removeEventListener(SockConnection.DATA_CHANGED, checkAnswer);			microphoneImageLoader.visible = false;			compareString = FarmGame.sock._data[0];			compareString = compareString.toLowerCase();						var comparingStrings:Array = compareString.split("\ ");			var compareStringCounter:int = 0;			//trace(comparingStrings);			for (compareStringCounter = 0; compareStringCounter < comparingStrings.length; compareStringCounter = compareStringCounter + 1)			{				comparingStrings[compareStringCounter] = comparingStrings[compareStringCounter] + ".png";			}			compareString = compareString + ".png";						time = new Date();			echoLog(time.getDate()+ "/" + (time.getMonth()+ 1)+ "/" + time.getFullYear()+ ", "+time.getHours()+"/"+time.getMinutes()+"/"+time.getSeconds()+"/"+time.getMilliseconds()+ ", Teaching, " + imageFilenames[imageNumber_1] + ", " + compareString + ", ");						for (compareStringCounter = 0; compareStringCounter < comparingStrings.length; compareStringCounter = compareStringCounter + 1)			{				if(imageFilenames[imageNumber_1] == comparingStrings[compareStringCounter])				{					congratulations();					//break;					return;				}							}						tryAgain();			//Market.sock.sendData("pause\n");					}		public function echoLog(str:String)		{			FarmGame.sock.sendData("echo \'"+str+"\' >> log.txt");		}		private function congratulations():void		{			noOfAttempts = maxNoOfAttempts;			correct.visible = true;			correct.x = imageLoader[imageNumber_1].getX() + 37.5;			correct.y = imageLoader[imageNumber_1].getY() + 37.5;			soundFinished = true;		}		private function tryAgain():void		{						noOfAttempts = noOfAttempts - 1;			playTheSound(null);		}				private function setupTheButtons():void		{			repeat = new MovieClip();			nextWord = new MovieClip();			horizontalBar = new ImageToMovie("Images/horizontalBar.jpg");						addChild(horizontalBar);			addChild(repeat);			addChild(nextWord);						repeat.visible = false;			nextWord.visible = false;			horizontalBar.hideImage();		}		private function initialiseTheButtons():void		{									horizontalBar.setX(0);			horizontalBar.setY(453);			horizontalBar.scaleX = 1.61;						buttonText1 = new TextField();			buttonText2 = new TextField();			buttonText1_telegu = new TextField();			buttonText2_telegu = new TextField();			textStyling = new TextFormat();			buttonText1.text = "Repeat";			buttonText2.text = "Next";			buttonText1_telegu.text = " మళ్ళీ చెయ్యి"; // telegu version for "repeat"			buttonText2_telegu.text = " ము౦దుకు"; // telegu version for "next"						textStyling.size = 24;			textStyling.color = 0xFFFFFF;			buttonText1.autoSize = TextFieldAutoSize.LEFT;			buttonText2.autoSize = TextFieldAutoSize.LEFT;			buttonText1.setTextFormat(textStyling);			buttonText2.setTextFormat(textStyling);						textStyling_telegu_1 = new TextFormat();			textStyling_telegu_1.color = 0xFFFFFF;			textStyling_telegu_1.size = 24;			//textStyling_telegu_1.font ="BRH Telugu";			textStyling_telegu_1.font ="Gautami";						buttonText1_telegu.setTextFormat(textStyling_telegu_1);			buttonText2_telegu.setTextFormat(textStyling_telegu_1);						buttonText1_telegu.x = buttonText1.width + 10;			buttonText2_telegu.x = buttonText2.width + 10;			buttonText1_telegu.y = -4;			buttonText2_telegu.y = -4;			buttonText1_telegu.width = 350;			buttonText2_telegu.width = 350;			//buttonText1_telegu.y = 			horizontalBar.showImage();			repeat.visible = true;			nextWord.visible = true;			repeat.addChild(buttonText1);			repeat.addChild(buttonText1_telegu);						repeat.x = 20;			repeat.y = 450;			nextWord.addChild(buttonText2);			nextWord.addChild(buttonText2_telegu);						nextWord.x = 600;			nextWord.y = 450;			//nextWord.addEventListener(MouseEvent.CLICK, showNextImage);			//repeat.addEventListener(MouseEvent.CLICK, repeatTheImage);		}				private function myKeyboardListener(e:KeyboardEvent):void		{			if (repeat.visible == true)			{				if (e.keyCode == 81) // keycode for q				//if (e.keyCode == Keyboard.SPACE)				{					if(repeatFlag==true)					{						imageNumber_1 = imageTracker;						repeatTheImage();					}				}								else if (e.keyCode == 80 || e.keyCode == Keyboard.RIGHT) // keycode for p				//else if (e.keyCode == Keyboard.ENTER)				{					if (soundFinished == true)						makeImageDisappear(imageTracker);						//showNextImage();				}								else if (e.keyCode == Keyboard.LEFT)				{					if (soundFinished == true)					{						if (imageTracker>0)						{							makeDisappearCurrentImageForPreviousImage(imageTracker);						}					}				}			}		}				private function imageDisappearFinished(e:TweenEvent)		{			showNextImage();		}		private function showPreviousImage(e:TweenEvent)		{						imageTracker = imageTracker - 1;			repeatFlag = false;						if (imageTracker >=0)			{				soundFinished = false;				correct.visible = false;				//fileCopystageBackground.alpha = 0.5;				fileCopyNarrativeBackground.alpha = 0.5;									//textField_telegu[imageTracker+1].visible = false;					myTeleguFontContainer.visible = false;					//imageLoader[imageTracker +1 ].visible = false;								imageNumber_1 = imageTracker;				imageLoader[imageTracker].showImage();				imageLoader[imageTracker].visible = true;				//textField_telegu[imageTracker].visible = true;				mainTextBox.text = teleguTextBox[imageTracker];				mainTextBox.setTextFormat(teleguTextStyling);				myTeleguFontContainer.visible = true;				syllabusTween = new Tween(imageLoader[imageTracker],"alpha",Regular.easeIn,0,1,0.5,true);				syllabusTween.start();				syllabusTween.addEventListener(TweenEvent.MOTION_FINISH,playTheSound);			}		}		private function showNextImage():void		{			imageTracker = imageTracker + 1;			repeatFlag = false;						if (imageTracker == 5)			{				stage.removeEventListener(KeyboardEvent.KEY_DOWN, myKeyboardListener);				movieFinished = true;				repeat.visible = false;				nextWord.visible = false;				removeChild(horizontalBar)				imageLoader[4].visible = false;				myTeleguFontContainer.visible = false;				//nextWord.removeEventListener(MouseEvent.CLICK, showNextImage);				//repeat.removeEventListener(MouseEvent.CLICK, repeatTheImage);								return;			}			showTheImage(imageTracker);							}				private function repeatTheImage():void {			if (repeatFlag == true)			{				microphoneImageLoader.visible = false;				repeatFlag = false;				//showTheImage(imageTracker);				playTheSound(null);			}		}						// this function loads the images which need to be taught 		// to the child in the variable imageLoader		// this function also loads the sounds corresponding to those images in the variable soundFiles		// parameters 		// 1. list : this is the array which stores the words which need to be taught		private function loadImages(list:Array)		{			// this variable is used to traverse the variable "list"			var counter_1:Number = 0;			while(counter_1<list.length)			{				// store the images in the imageLoader array														imageLoader.push(new ImageToMovie("Images/" + list[counter_1].image));				imageFilenames.push(new String(list[counter_1].image));				teleguTextBox[counter_1] = list[counter_1].transliteration;				soundFiles.push(new Sound());				soundFiles_telegu.push(new Sound());				soundFiles[counter_1].load(new URLRequest("Audio/" + list[counter_1].audio));				soundFiles_telegu[counter_1].load(new URLRequest("Audio/" + list[counter_1].audio.substr(0,(list[counter_1].audio.length)-4 ) + "_telegu.mp3"));								this.addChild(imageLoader[counter_1]);								// hide the images				//imageLoader[counter_1].visible = false;				imageLoader[counter_1].hideImage();				// bring the images to the bottom left corner of the screen.				imageLoader[counter_1].setX(40);				imageLoader[counter_1].setY(140);								// shrink the size of the images by half								imageLoader[counter_1].scaleX = 1;				imageLoader[counter_1].scaleY= 1;												counter_1 = counter_1 + 1;			}		}						//Load the audio files for dialogues		private function loadDialogues():void		{			var i:int=0;			for(i=0;i<dialoguesArray.length;i++)			{				dialogueSound[i] = new Sound(new URLRequest("Audio/"+dialoguesArray[i].audio));			}			dialogueSound[i-1].addEventListener(Event.COMPLETE, playDialogues);		}		private function motherDialogueStarted(e:Event):void		{			channel_bubble = dialogueSound[counter].play();			counter++;			channel_bubble.addEventListener(Event.SOUND_COMPLETE, playDialogues);		}		private function sonDialogueFinished(e:Event):void		{			//FarmGame.mother_bubble.mother_speech.text=dialoguesArray[counter].text;			//trace(FarmGame.mother_bubble.mother_speech.text);			dialogueTextField_mother.text = dialoguesArray[counter].text;			dialogueTextField_mother.setTextFormat(dialogueStyling);			FarmGame.son_bubble.son_speech.text="";			FarmGame.mother_bubble.visible=true;			//FarmGame.mother_bubble.mother_speech.size = FarmGame.mother_bubble.mother_speech.size * 1.5;			//FarmGame.son_bubble.son_speech.setTextFormat = FarmGame.son_bubble.son_speech.size * 1.5;			motherBubbleTween.start();			motherBubbleTween.addEventListener(TweenEvent.MOTION_FINISH,motherDialogueStarted);			FarmGame.son_bubble.visible=false;		}		private function motherDialogueFinished(e:Event):void		{			FarmGame.son_bubble.visible = true;			//FarmGame.son_bubble.son_speech.text=dialoguesArray[counter].text;			//trace(FarmGame.son_bubble.son_speech.text);			dialogueTextField_raju.text = dialoguesArray[counter].text;			dialogueTextField_raju.setTextFormat(dialogueStyling);			FarmGame.mother_bubble.mother_speech.text="";			FarmGame.mother_bubble.visible=false;			//FarmGame.mother_bubble.mother_speech.size = FarmGame.mother_bubble.mother_speech.size * 1.5;			//FarmGame.son_bubble.son_speech.size = FarmGame.son_bubble.son_speech.size * 1.5;			sonBubbleTween.start();			sonBubbleTween.addEventListener(TweenEvent.MOTION_FINISH,motherDialogueStarted);						}		private function playDialogues(soundEvent:Event):void		{			//var channel:SoundChannel = new SoundChannel();			if(counter<dialoguesArray.length)			{				if(dialoguesArray[counter].speaker=="Mother")				{					sonBubbleTween2.start();					sonBubbleTween2.addEventListener(TweenEvent.MOTION_FINISH,sonDialogueFinished);																		}							else if(dialoguesArray[counter].speaker=="Raju")				{					motherBubbleTween2.start();					motherBubbleTween2.addEventListener(TweenEvent.MOTION_FINISH,motherDialogueFinished);														}			}			else			{				FarmGame.mother_bubble.visible=false;				FarmGame.son_bubble.visible=false;				initialiseTheButtons();				showTheImage(imageTracker);				return;			}		}	}}